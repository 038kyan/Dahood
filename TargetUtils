local module = {}

function module.clearTargetEffects(TARGET, OWNER, Player)
    coroutine.wrap(function()
        for _, Connection in getgenv().TARGET_CONNETION do
            Connection:Disconnect()
        end
        
        for i,v in Player:GetPlayers() do
            if v.Character and v.Character:FindFirstChild("z") then 
                v.Character:FindFirstChild("z"):Destroy() 
            end
            if v.Character and v.Character:FindFirstChild("TargetOutline") then 
                v.Character:FindFirstChild("TargetOutline"):Destroy() 
            end
        end
        
        for i,v in OWNER.Character:GetChildren() do
            if v:IsA("Beam") then
                v:Destroy()
            end
        end
        
        for i,v in Player:GetPlayers() do
            if v.Character and v.Character.HumanoidRootPart:FindFirstChild("Circle") then 
                v.Character.HumanoidRootPart:FindFirstChild("Circle"):Destroy() 
            end
        end
    end)()
end

function module.setupTargetHighlights(TARGET, OWNER)
    coroutine.wrap(function()
        local Beam = Instance.new("Beam",OWNER.Character)
        Beam.Brightness = 9e9
        Beam.Color = ColorSequence.new{ColorSequenceKeypoint.new(0, Color3.fromRGB(255,255,255)),ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255,255,255)),ColorSequenceKeypoint.new(1, Color3.fromRGB(255,255,255))}
        Beam.LightEmission = 1
        Beam.TextureMode = Enum.TextureMode.Wrap
        Beam.TextureSpeed = .1
        Beam.Attachment0 = OWNER.Character.UpperTorso.BodyBackAttachment
        Beam.Attachment1 = TARGET.Character.UpperTorso.BodyBackAttachment
        Beam.Width0 = .1
        Beam.Width1 = .1
        Beam.FaceCamera = true
        
        local highlight = Instance.new("Highlight", TARGET.Character)
        highlight.Name = "TargetOutline"
        highlight.OutlineTransparency = 0
        highlight.FillTransparency = 1
        highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
        highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    end)()
end

return module
